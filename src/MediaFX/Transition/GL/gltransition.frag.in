// Copyright (C) 2024 Andrew Wason
// SPDX-License-Identifier: GPL-3.0-or-later

#version 440
#define texture2D texture
#define precision
#define highp
#define mediump
#define lowp

layout(location = 0) in vec2 qt_TexCoord0;
layout(location = 0) out vec4 fragColor;
layout(std140, binding = 0) uniform buf {
    mat4 qt_Matrix;
    float qt_Opacity;
    float progress;
    float ratio;
    @SHADER_UNIFORMS@
};
layout(binding = 1) uniform sampler2D source;
layout(binding = 2) uniform sampler2D dest;

vec4 getFromColor(vec2 uv) {
    return texture(source, uv);
}

vec4 getToColor(vec2 uv) {
    return texture(dest, uv);
}

@SHADER_TRANSITION@

void main() {
    fragColor = transition(qt_TexCoord0) * qt_Opacity;
}